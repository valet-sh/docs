{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to valet.sh","text":""},{"location":"#why-valetsh","title":"Why valet.sh?","text":"<p>valet.sh supports software developers to concentrate fully on their daily challenges without having to worry about how to install and properly configure the necessary services on various operating systems for many different projects and requirements. Unlike other tools which provides development environments, valet.sh provides all necessary services such as PHP, MySQL and Elasticsearch in all important versions in parallel without having to make sluggish and error-prone system-side changes.</p>"},{"location":"#how-valetsh-works","title":"How valet.sh Works","text":"<p>valet.sh provides uniform, stable and high-performance development environments for macOS and Ubuntu that can be configured and controlled using an easy-to-use terminal user interface. Technologically, valet.sh is based on bash and Ansible.</p>"},{"location":"#open-source","title":"Open Source","text":"<p>valet.sh is completely open source available on GitHub</p>"},{"location":"#interested","title":"Interested?","text":"<p>Let's get started using valet.sh</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#2110-08102025","title":"2.11.0 (08/10/2025)","text":"<p>Changes</p> <ul> <li>Support for macOS 26</li> <li>Support for MariaDB 10.11</li> <li>Support for Valkey 8</li> <li>Support for Opensearch 3</li> <li>Mailpit as a replacement for Mailhog</li> </ul>"},{"location":"changelog/#2100-22052025","title":"2.10.0 (22/05/2025)","text":"<p>Changes</p> <ul> <li>Support for Ubuntu 24.04</li> <li>Support for Mariadb 11.4</li> <li>Support for MySQL 8.4</li> <li>Support for PHP 8.4</li> </ul>"},{"location":"changelog/#290-22022023","title":"2.9.0 (22/02/2023)","text":"<p>Changes</p> <ul> <li>Support for Mariadb 10.6 (#256)</li> <li>Support for PHP 8.2 (#255)</li> <li>Support for OpenSearch 2 (#232)</li> <li>Add possibility to define default collation as UTF8MB4 (#252)</li> <li>Add cleanup parameter to init-instance #254 (#254)</li> </ul>"},{"location":"changelog/#280-19092022","title":"2.8.0 (19/09/2022)","text":"<p>Issues that have been solved</p> <ul> <li>mysql settings were not optimal (#226)</li> <li>'db' command does not support MariaDB (#224)</li> <li>Python deprecation warning on Ubuntu 22.04 (#222)</li> <li>broken .my.cnf symlink by setting mariadb10.4 as default service (#219)</li> </ul> <p>Changes</p> <ul> <li>ansible facts_cache enabled to increase execution speed (#238)</li> <li>Neos/Flow flow_context is now configurable (#235)</li> <li>Restart dnsmasq when using valet.sh service restart all (#218)</li> <li>Restart Nginx when using valet.sh service restart all (#215)</li> <li>Start correct PHP when linking projects (#213)</li> <li>link command should not trigger an error (#80)</li> <li>Add command to deploy env.php from .valet-sh.yml (#217)</li> <li>Add comand to clear project specific cache (#216)</li> <li>mysql and mysqldump binary respect specified DBMS in .valet-sh.yml files (#185)</li> <li>PATH variable is now set in PHP-FPM services (#242)</li> </ul>"},{"location":"changelog/#270-21042022","title":"2.7.0 (21/04/2022)","text":"<p>Issues that have been solved</p> <ul> <li>Invalid php temp dir detection on macOS (#188)</li> <li>Fix error on init-instance filesystem sync when target directory does not exist (#190)</li> <li>Allow the use of a test.php within Magento (#192)</li> <li>Increase table width of links list (see commit)</li> </ul> <p>Changes</p> <ul> <li>Support for Apple Silicon (via rosetta2) (#200)</li> <li>macOS Monterey support (Intel and M1)</li> <li>Support for OpenSearch 1 (#198)</li> <li>Support for ElasticSearch 8 (#204)</li> <li>Post restore commands are now generic shell commands and not bound to php (#194)</li> <li>Composer now runs in non-interactive mode (#189)</li> <li>Up2date check (shows a warning if valet.sh self-upgrade was not executed for more than 30 days) (#48)</li> <li>Add the option to skip DB synchronisation within init-instance (#202)</li> <li>PHP version definition will now be passed through to sub folders (see commit)</li> </ul>"},{"location":"changelog/#260-29112021","title":"2.6.0 (29/11/2021)","text":"<p>Issues that have been solved</p> <ul> <li>(none)</li> </ul> <p>Changes</p> <ul> <li>Dynamically use specified composer version (#174)</li> <li>Add support for MariaDB via init-instance (#178)</li> <li>Support for PHP8.1</li> </ul>"},{"location":"changelog/#250-29102021","title":"2.5.0 (29/10/2021)","text":"<p>Issues that have been solved</p> <ul> <li>valet.sh service command without an argument fails without correct error message (https://github.com/valet-sh/valet-sh/pull/169)</li> </ul> <p>Changes</p> <ul> <li>Added a default vhost that shows all linked sites (https://github.com/valet-sh/valet-sh/pull/171)</li> <li>fuzzy service name inputs (php73, PHP7.3, php7.3) are now possible (https://github.com/valet-sh/valet-sh/pull/170)</li> <li>Updated Magento2 workflow for \"Init-instance\" command to allow processing custom cli commands and SQL-Queries (https://github.com/valet-sh/valet-sh/pull/168)</li> <li>.valet-sh.yml stub file now contains composer defintion as service (https://github.com/valet-sh/valet-sh/pull/167)</li> <li>MariaDB 10.4 service is now available (https://github.com/valet-sh/valet-sh/pull/176)</li> </ul>"},{"location":"changelog/#240-29082021","title":"2.4.0 (29/08/2021)","text":"<p>Issues that have been solved</p> <ul> <li>(none)</li> </ul> <p>Changes</p> <ul> <li>xdebug3 is now available for PHP 7.3, 7.4 and 8.0 (please see PHP#Managexdebug)</li> <li>composer2 is now available (please see Composer)</li> </ul>"},{"location":"changelog/#230-24082021","title":"2.3.0 (24/08/2021)","text":"<p>Issues that have been solved</p> <ul> <li>Fix non-interactive Magento app:config:import (https://github.com/valet-sh/valet-sh/pull/158)</li> <li>Replace Elasticsuite specific indexes with reindexAll in stub file (https://github.com/valet-sh/valet-sh/pull/156)</li> </ul> <p>Changes</p> <ul> <li>PHP8.0 is now available</li> <li>\"valet.sh link\" now supports typo3</li> </ul>"},{"location":"changelog/#220-02082021","title":"2.2.0 (02/08/2021)","text":"<p>Issues that have been solved</p> <ul> <li>(none)</li> </ul> <p>Changes</p> <ul> <li>Neos-Workflows for \"init-instance\" and \"restore\" command are now available</li> </ul>"},{"location":"changelog/#211-05072021","title":"2.1.1 (05/07/2021)","text":"<p>Issues that have been solved</p> <ul> <li>invalid ansible version dependency</li> </ul>"},{"location":"changelog/#210-05072021","title":"2.1.0 (05/07/2021)","text":"<p>Issues that have been solved</p> <ul> <li>Using valet.sh link without php version will use the default php version #143</li> <li>Service disable fails with not started services #134</li> </ul> <p>Changes</p> <ul> <li>PHP<ul> <li>\"valet.sh xdebug on\" is now working without specifing a PHP version when a .valet-sh.yml file exists in current directory</li> </ul> </li> <li>Nginx<ul> <li>each vhost now uses its own access and error log file</li> </ul> </li> <li>NodeJs<ul> <li>default node version is now 14</li> </ul> </li> </ul>"},{"location":"changelog/#201-16042021","title":"2.0.1 (16/04/2021)","text":"<p>Issues that have been solved</p> <ul> <li>rabbitmq vhost queues not removeable via web interface #128</li> <li>A command to stub the .valet-sh.yml #47</li> <li>Automatically set PHP version #74</li> <li>Update env.php for magento 2.4 compatibility #103</li> <li>php imagick module is not installed #126</li> <li>Import of development CA on Ubuntu is slow #123</li> <li>valet.sh install fails after a certain time if the entered password was wrong #92</li> <li>Support for bash shell #51</li> <li>make zsh usage optional #117</li> <li>valet.sh init-instance website config is not configurable #107</li> <li>Restore does not work with provided parameters #105</li> <li>Switch composer installs in init-instance #130</li> <li>Install composer as root #95</li> </ul> <p>Changes</p> <ul> <li>Shell<ul> <li>You can now use the Bash shell if you prefer (you needed to use zsh before)</li> <li>Use this command to define Bash as your default shell: valet.sh configset default_shell bash</li> </ul> </li> <li>RabbitMQ<ul> <li>The RabbitMQ \"admin\" user that will be created by default now has administrator privileges and will be able to delete VHosts via web interface</li> </ul> </li> <li>PHP<ul> <li>The module \"imagick\" is now automatically installed</li> </ul> </li> <li>Instanciation of projects<ul> <li>You can now use \"valet.sh init\" to create a .valet-sh.yml file that defines and sets up your environment (see documentation)</li> <li>If you use the configuration via .valet-sh.yml and define a PHP version, you can now use \"php\" instead of the specific PHP version (\"php7.4\" etc.)</li> <li>The env.php provided for magento projects via init-instance is now compatible with Magento 2.4(this command is currently alpha state and therefore not documented completely)</li> </ul> </li> <li>Performance<ul> <li>The install process has been sped up on Ubuntu</li> </ul> </li> <li>Bugfixes<ul> <li>valet.sh install will not fail anymore if it's taking too long to execute</li> <li>Magento configuration in .valet-sh.yml will now work properly on website scope</li> <li>The restore command will now work for other identifiers than test (this command is currently alpha state and therefore not documented yet)</li> <li>composer is now installed as root and given ownership to the current user afterwards to ensure it can be overwritten in the future</li> </ul> </li> </ul>"},{"location":"imprint/","title":"Imprint","text":"<p>This website is the common web presence of the OpenSource software project valet.sh and is proudly provided to you by TechDivision GmbH. If you have any questions or problems, just get in touch with us and we'll work it out!</p>"},{"location":"imprint/#information-according-to-5-ddg","title":"INFORMATION ACCORDING TO \u00a7 5 DDG:","text":"<p>TechDivision GmbH An der Alten Spinnerei 2 A D-83059 Kolbermoor</p> <p>Represented by: Stefan Willkommer / CEO Tim Wagner / CTO</p> <p>Contact: Phone: +49 8031 / 22 10 55 0 Email: info@techdivision.com</p> <p>Register entry - TechDivision GmbH: Registration court: Traunstein Register number: HRB 17123</p> <p>VAT-ID - TechDivision GmbH: VAT number: DE249664276</p> <p>Responsible for the content according to \u00a7 18 para. 2 MStV: Josef Willkommer An der Alten Spinnerei 2 A D-83059 Kolbermoor</p>"},{"location":"privacy/","title":"Privacy","text":""},{"location":"privacy/#responsible-party-for-data-processing-on-this-website","title":"RESPONSIBLE PARTY FOR DATA PROCESSING ON THIS WEBSITE","text":"<p>TechDivision GmbH An der Alten Spinnerei 2 A 83059 Kolbermoor</p>"},{"location":"privacy/#privacy-protection","title":"PRIVACY PROTECTION","text":"<p>The use of this website is possible without providing any personal data. Insofar as personal data (e.g. name, address or email addresses) are collected on our pages, this is always done on a voluntary basis, as far as possible.  These data will not be passed on to third parties without your explicit consent. We point out that data transmission in the Internet (e.g. in case of communication via e-mail) may have security flaws. A complete protection of data against the access by third parties is not possible.</p>"},{"location":"privacy/#ssl-andor-tls-encryption","title":"SSL- AND/OR TLS ENCRYPTION","text":"<p>For safety reasons and in order to protect the transmission of confidential information you send to us as site operators, our website uses a SSL and/or TLS encryption. You may recognize the encrypted connection by the \u201chttps://\u201c URL and the lock icon in the address line.</p>"},{"location":"privacy/#cookies","title":"COOKIES","text":"<p>We do not use any cookies and will not track you.</p>"},{"location":"privacy/#server-log-files","title":"SERVER LOG FILES","text":"<p>The provider of the pages automatically collects and stores information in so-called server log files which your browser transmits automatically to us. These are:</p> <ul> <li>Browser type/ browser version</li> <li>Operating system used (User agent parameters of the browser)</li> <li>Referrer URL</li> <li>Requested URL</li> <li>Data size of the server response</li> <li>IP address of the accessing computer</li> <li>Time of the server request</li> </ul> <p>These data cannot be attributed directly to certain persons. A combination of these data with other data sources is not done. We reserve the right to check these data subsequently if we become aware of specific indications for illegal usage.</p>"},{"location":"privacy/#contact","title":"CONTACT","text":"<p>If you send us an inquiry via email or github, your data given in the inquiry including the contact data you stated there will be stored by us for processing the inquiry and in case of follow-up questions until the processing is finished.  As a matter of course these data will not be passed on to third parties.</p>"},{"location":"privacy/#right-to-data-portability","title":"RIGHT TO DATA PORTABILITY","text":"<p>You retain the right that the data which we process in an automated way on the basis of your consent or in performance of a contract are surrendered to you or to third parties. They will be provided in a machine-readable form. In case you request the direct transmission of the data to another responsible party, this will only be done if technically feasible.</p>"},{"location":"privacy/#information-correction-blocking-and-deletion-of-data","title":"INFORMATION, CORRECTION, BLOCKING AND DELETION OF DATA","text":"<p>You are at any time entitled to get free information on your personal data stored, their origin and recipient and the purpose of the data processing and you are entitled to correction, blocking or deletion of these data. For this purpose or in case of further questions you may at any time contact us at the address stated in the legal details or you contact directly our data security officer named below. We will gladly take care of your request.</p>"},{"location":"privacy/#right-of-objection-against-data-collection-in-special-cases-as-well-as-against-direct-mail-art-21-dsgvo","title":"RIGHT OF OBJECTION AGAINST DATA COLLECTION IN SPECIAL CASES AS WELL AS AGAINST DIRECT MAIL (ART. 21 DSGVO)","text":"<p>In case of data processing on the basis of Art. 6 para. 1 lit. e or f DSGVO (General Data Protection Regulation) you are at any time entitled to file an objection against the processing of your personal data for reasons resulting from your special situation; this also applies for profiling based on these regulations. If you file an objection your relevant personal data will no longer be processed, unless we can provide compelling legitimate reasons for the processing, outweighing your interests, rights and freedoms or the processing serves for the assertion, exertion or defence of legal claims (objection according to Art. 21 para. 1 DSGVO (General Data Protection Regulation)).</p> <p>If your personal data are processed for direct mail, you have the right to file an objection at any time against the processing of personal data concerning you for the purpose of such advertising; this also applies to profiling insofar as it is in conjunction with such direct mail (objection according to Art. 21 para. 2 DSGVO (General Data Protection Regulation)).</p>"},{"location":"privacy/#data-security-officer","title":"DATA SECURITY OFFICER","text":"<p>Dr. Stefan Krempl Email: datenschutz@techdivision.com</p>"},{"location":"privacy/#right-of-complaint-at-the-competent-supervisory-authority","title":"RIGHT OF COMPLAINT AT THE COMPETENT SUPERVISORY AUTHORITY","text":"<p>We are constantly trying to fulfill all data protection provisions and we take your concern very seriously and gladly take care of it. Alternatively, in case of data protection questions,  you as the aggrieved party have the right of complaint at the competent supervisory authority. The competent supervisory authority with regard to data protection issues is the Commissioner for Data Protection of the federal state where your company has its registered office.</p> <p>The following link provides a list of data protection officers as well as their contact data: https://www.bfdi.bund.de/DE/Infothek/Anschriften_Links/anschriften_links-node.html.</p>"},{"location":"privacy/#dispute-settlement","title":"DISPUTE SETTLEMENT","text":"<p>The European Commission is providing an online platform for dispute resolution. Just check out the link http://ec.europa.eu/consumers/odr/.</p> <p>Neither are we legally obliged nor voluntarily willing to take part in a dispute settlement.</p>"},{"location":"commands/","title":"Commands","text":"<ul> <li>config</li> <li>db</li> <li>init</li> <li>init-instance</li> <li>install</li> <li>link</li> <li>links</li> <li>self-upgrade</li> <li>service</li> <li>unlink</li> <li>update-dev-ca</li> <li>xdebug</li> </ul> <p>You can use the parameter \"-h\" to view additional details for each command.</p>"},{"location":"commands/config/","title":"Config","text":""},{"location":"commands/config/#description","title":"Description","text":"<p>Sets, deletes, manages config entries in the local global valet.sh config file</p>"},{"location":"commands/config/#usage","title":"Usage","text":"<pre><code>valet.sh config (list|get|set|remove) &lt;variable-name&gt; &lt;variable-value&gt;\n</code></pre>"},{"location":"commands/config/#examples","title":"Examples","text":"<p>list all custom valet.sh variables <pre><code>valet.sh config list\n</code></pre> get a single variable value <pre><code>valet.sh config get varname\n</code></pre> set a valet.sh variable <pre><code>valet.sh config set varname varvalue\n</code></pre> delete a custom valet.sh variable <pre><code>valet.sh config remove varname\n</code></pre></p>"},{"location":"commands/config/#available-configurations","title":"Available configurations","text":"config var default value allowed values comment default_shell zsh bash,zsh <code>valet.sh install</code> is required after changing the configuration default_nvm nvm volta,nvm <code>valet.sh install</code> is required after changing the configuration"},{"location":"commands/db/","title":"DB","text":""},{"location":"commands/db/#description","title":"Description","text":"<p>Create, drop, import, export, ls, reset of mysql databases</p> <p>Note</p> <p>The commands are only executed on the default mySQL database server. You must change the default database if you want to work with these commands. Read more about how to change the default MySQL service here.</p>"},{"location":"commands/db/#usage","title":"Usage","text":"<pre><code>valet.sh db (ls|create|drop|reset|export|import) (optional)&lt;filename&gt; &lt;database-name&gt;\n</code></pre>"},{"location":"commands/db/#examples","title":"Examples","text":"<p>list all existing databases <pre><code>valet.sh db ls\n</code></pre> create a new database <pre><code>valet.sh db create projectX\n</code></pre> drops an existing database <pre><code>valet.sh db drop projectX\n</code></pre> dops and creates a database <pre><code>valet.sh db reset projectX\n</code></pre> import a mysql database dump. Database will be created if it does not exist <pre><code>valet.sh db import database.sql.gz projectX\n</code></pre> export a mysql database into given db-filename <pre><code>valet.sh db export database.sql.gz projectX\n</code></pre></p>"},{"location":"commands/init-instance/","title":"Init-Instance","text":""},{"location":"commands/init-instance/#description","title":"Description","text":"<p>Sets up the project according to the .valet-sh.yml file in the current directory. See also the init command to generate a plain configuration file and the Project configuration via .valet-sh.yml guide.</p>"},{"location":"commands/init-instance/#usage","title":"Usage","text":"<pre><code>valet.sh init-instance\n</code></pre>"},{"location":"commands/init-instance/#options","title":"Options","text":"<pre><code>--identifier      Set different database identifier (e.g. \"test\" is used within .valet-sh.yml but you want to use the \"prod\" database file, you can use --identifier=prod\n--skip-db         Skip database synchronisation (downloading, dropping and importing the database file)\n--skip-fs         Skip filesystem synchronisation (media files etc.)\n</code></pre>"},{"location":"commands/init/","title":"Init","text":""},{"location":"commands/init/#description","title":"Description","text":"<p>Creates a .valet-sh.yml file in the current directory. See also the init-instance command to generate a plain configuration file and the Project configuration via .valet-sh.yml guide.</p>"},{"location":"commands/init/#usage","title":"Usage","text":"<pre><code>valet.sh init\n</code></pre>"},{"location":"commands/install/","title":"Install","text":""},{"location":"commands/install/#description","title":"Description","text":"<p>Installation of all necessary services for a full development environment. If valet.sh triggers errors, please re-install all requirements via this command. You may want to upgrade to the newest version before.</p>"},{"location":"commands/install/#usage","title":"Usage","text":"<pre><code>valet.sh install\n</code></pre>"},{"location":"commands/link/","title":"Link","text":""},{"location":"commands/link/#description","title":"Description","text":"<p>Linking of projects including automatic provisioning of nginx vhosts for a specific web application (e.g. magento). See also unlink.</p>"},{"location":"commands/link/#usage","title":"Usage","text":"<pre><code>valet.sh link &lt;link-name&gt; (optional)&lt;php-version)\n</code></pre>"},{"location":"commands/link/#drivers","title":"Drivers","text":"<p>At the moment we are supporting the following php based applications. The link command tries to find out which web application it is and loads the corresponding nginx configuration.</p> <p>Currently supported applications:</p> <ul> <li>Magento2</li> <li>Magento1</li> <li>Neos CMS</li> <li>Typo3 CMS</li> <li>Shopware 6</li> </ul> <p>If no supported application was found, a minimal configuration is loaded!</p> <p>Note</p> <p>do you need another one? Open a github issue! https://github.com/valet-sh/valet-sh</p>"},{"location":"commands/link/#examples","title":"Examples","text":"<p>Link the current directory with name 'projectx'. if you don't specify a php version, php72 will be used <pre><code>valet.sh link projectx\n</code></pre> Link the current directory with a custom php version. Only the following values are allowed: php56 php70 php71 php72 php73 php74 <pre><code>valet.sh link projectx php73\n</code></pre></p>"},{"location":"commands/links/","title":"Links","text":""},{"location":"commands/links/#description","title":"Description","text":"<p>Output all links in a list that have been created with link.</p>"},{"location":"commands/links/#usage","title":"Usage","text":"<pre><code>valet.sh links\n</code></pre>"},{"location":"commands/links/#example-output","title":"Example Output","text":"<pre><code>+----------------+----------------------------------------+------+-------------+-------------+\n|      Name      |                  Path                  | SSL  | PHP-Version | Application |\n+----------------+----------------------------------------+------+-------------+-------------+\n|    projectx    |   /home/user/workspace/projectx        | True |    php73    |  Magento 2  |\n+----------------+----------------------------------------+------+-------------+-------------+\n</code></pre>"},{"location":"commands/self-upgrade/","title":"self-upgrade","text":""},{"location":"commands/self-upgrade/#description","title":"Description","text":"<p>Upgrade to the newest available version of valet.sh.</p> <p>You should also execute install afterwards, as self-upgrade only updates the code-base of valet.sh itself.</p>"},{"location":"commands/self-upgrade/#usage","title":"Usage","text":"<pre><code>valet.sh self-upgrade\n</code></pre>"},{"location":"commands/service/","title":"Service","text":""},{"location":"commands/service/#description","title":"Description","text":"<p>With the service command you are able to define the state (enabled/disabled) of a service and set the default version for PHP, Composer, Xdebug, Elasticsearch, and MySQL.</p> <p>Information</p> <p>All changes are \"install\" stable. This means \"valet.sh install\" will not override your state or default settings.</p> <p>To reduce the load on your system, its makes sense to stop all services you don't need!</p>"},{"location":"commands/service/#overview","title":"Overview","text":"<ul> <li>list</li> <li>enable</li> <li>disable</li> <li>start</li> <li>stop</li> <li>restart</li> <li>default</li> </ul>"},{"location":"commands/service/#list","title":"list","text":"<p>This command shows you the state (enabled/disabled on system startup) of each service and which one is the default. To identify which services are currently started or stopped, you can use brew services list (macOS).</p> <p>valet.sh service list <pre><code>+----------------+-------+\n|    Service     | State |\n+----------------+-------+\n| elasticsearch1 |   False   |\n+----------------+-------+\n| elasticsearch2 |   0   |\n+----------------+-------+\n| elasticsearch5 |   0   |\n+----------------+-------+\n| elasticsearch6 |   1   |\n+----------------+-------+\n| elasticsearch7 |   0   |\n+----------------+-------+\n|     php56      |   0   |\n+----------------+-------+\n|     php70      |   0   |\n+----------------+-------+\n|     php71      |   0   |\n+----------------+-------+\n|     php72      |   1   |\n+----------------+-------+\n|     php73      |   1   |\n+----------------+-------+\n|     php74      |   1   |\n+----------------+-------+\n|    mysql57     |   1   |\n+----------------+-------+\n|    mysql80     |   0   |\n+----------------+-------+\n|    mariadb104  |   0   |\n+----------------+-------+\n|    rabbitmq    |   0   |\n+----------------+-------+\n|     redis      |   1   |\n+----------------+-------+\n|     nginx      |   1   |\n+----------------+-------+ \n+-----------------+\n| Default-Service |\n+-----------------+\n|    composer1    |\n+-----------------+\n| elasticsearch6  |\n+-----------------+\n|     mysql57     |\n+-----------------+\n|      php74      |\n+-----------------+\n|     xdebug3     |\n+-----------------+\n</code></pre></p>"},{"location":"commands/service/#enable","title":"enable","text":"<p>start the service and put in autostart <pre><code>valet.sh service enable mysql80\n</code></pre></p>"},{"location":"commands/service/#disable","title":"disable","text":"<p>stops the service and remove from autostart <pre><code>valet.sh service disable mysql80\n</code></pre></p>"},{"location":"commands/service/#start","title":"start","text":"<p>start the service, but it will not change the behavior for autostart <pre><code>valet.sh service start mysql80\n</code></pre></p>"},{"location":"commands/service/#stop","title":"stop","text":"<p>stop the service, but it will not change the behavior for autostart <pre><code>valet.sh service stop mysql80\n</code></pre></p>"},{"location":"commands/service/#restart","title":"restart","text":"<p>restart the service, but it will not change the behavior for autostart <pre><code>valet.sh service restart mysql80\n</code></pre></p> <p>Note</p> <p>Since 2.6.3 `valet.sh service restart all restarts all enabled services!</p>"},{"location":"commands/service/#default","title":"default","text":"<p>set a default service. Only PHP, Elasticsearch and mysql are \"defaultable\" services.  <pre><code>valet.sh service default mysql80\n</code></pre></p> <ul> <li>PHP: setting a default php only changes the default php on cli. You can still use any other installed PHP versions by appending the version number, e.g. \"php7.0\"</li> <li>Elasticsearch: the default elasticsearch is listening on port 9200. You can still use any other installed Elasticsearch version by accessing the version specific port (see Elasticsearch service documentation)</li> <li>MySQL: changes the default mysql command on cli and the version listening on port 3306. You can still access any other installed MySQL versions by appending the version number, e.g \"mysql5.7\", or using the version specific port (see MySQL service documentation)</li> </ul> <p>Warning</p> <p>Setting the default version to a disabled service will not change the state of it! You have to enable the service if you want to use it</p>"},{"location":"commands/unlink/","title":"Unlink","text":""},{"location":"commands/unlink/#description","title":"Description","text":"<p>unlinking projects which means deleting vhosts configurations.</p>"},{"location":"commands/unlink/#usage","title":"Usage","text":"<p><pre><code>valet.sh unlink &lt;link-name&gt;\n</code></pre> The command only deletes the nginx configuration for the given link-name. Other data will not be deleted!</p>"},{"location":"commands/unlink/#example","title":"Example","text":"<pre><code>valet.sh unlink projectx\n</code></pre>"},{"location":"commands/update-dev-ca/","title":"Update-Dev-CA","text":""},{"location":"commands/update-dev-ca/#description","title":"Description","text":"<p>Import dev-ca for browsers to validly display local certificates</p>"},{"location":"commands/update-dev-ca/#usage","title":"Usage","text":"<pre><code>valet.sh update-dev-ca\n</code></pre>"},{"location":"commands/xdebug/","title":"Xdebug","text":""},{"location":"commands/xdebug/#description","title":"Description","text":"<p>Enables or disables xdebug for the defined PHP version.</p>"},{"location":"commands/xdebug/#usage","title":"Usage","text":"<pre><code>valet.sh xdebug (on|off) &lt;php_version&gt;\n\n  php_version: (5.6|7.0|7.1|7.2|7.3|7.4|8.0|8.1)\n</code></pre> <p>Note</p> <p>As of Version 2.1 the command will attempt to determine the target PHP version from .valet-sh.yml, thus making the parameter php_version optional. In case the parameter is not specified and the target PHP version cannot be determined, an error message will be issued, stating that the PHP version must be specified.</p>"},{"location":"commands/xdebug/#example-output","title":"Example Output","text":"<p>Enable xdebug for php5.6 on cli and fpm <pre><code>valet.sh xdebug on 5.6\n</code></pre></p> <p>Disable xdebug for php5.6 on cli and fpm <pre><code>valet.sh xdebug off 5.6\n</code></pre></p>"},{"location":"getting-started/","title":"Getting started","text":"<ul> <li>Installation</li> <li>First steps</li> <li>Support-Matrix</li> <li>What's new in valet.sh 2.x</li> </ul>"},{"location":"getting-started/first-steps/","title":"First steps","text":""},{"location":"getting-started/first-steps/#development-ssl-certificates","title":"Development SSL Certificates","text":"<p>make sure the development CA has been imported into your browser. To test this, just go to https://mailhog.test in your browser.  You shouldn't get a certificate warning from your browser.    If you have any issue please try to start the certificate import manually.</p> <p>Warning</p> <p>Under Ubuntu, the certificate must be imported separately into each browser.  If you install a new browser, you must import the certificate with this command.</p> <pre><code>valet.sh update-dev-ca\n</code></pre>"},{"location":"getting-started/first-steps/#manage-your-needed-services","title":"Manage your needed services","text":"<p>valet.sh comes with a bunch of services that can require a lot amount of RAM and CPU. Therefore you should disable/enable only the services you really need. Use valet.sh service list to get a list of all services and their states. Use valet.sh service enable  respectively valet.sh service disable   enable or disable a service. <p>You can find more information about handling service status here.</p> <pre><code># select php7.4 as default version. If you run \"PHP\" on the console you will automatically get PHP 7.4. All other versions can still be reached via the version e.g. php7.2\nvalet.sh service default php74\n\n# select elasticsearch7 as default version. Elasticsearch 7 now running on port 9200, but all other version can still be reached via their own ports\nvalet.sh service default elasticsearch7\n\n# select mysql80 as default version. MySQL 8.0 now running on port 3306 and you will reach it on CLI automatically via \"mysql\"\nvalet.sh service default mysql80\n</code></pre> <p>If you have any questions about the available services or versions, please check out the service documentation.</p>"},{"location":"getting-started/installation/","title":"Installation","text":"<p>Migration from valet+</p> <p>If you are migrating from valet+, please migrate with the macOS Upgrade Guide guide.</p>"},{"location":"getting-started/installation/#install-valetsh","title":"Install valet.sh","text":"<pre><code>bash &lt;(curl -fsSL https://raw.githubusercontent.com/valet-sh/install/master/install.sh)\n</code></pre> <p>Installation on Apple M1</p> <p>At the moment valet.sh on Apple m1 requires rosetta2</p> <pre><code>/usr/sbin/softwareupdate --install-rosetta --agree-to-license\nbash &lt;(curl -fsSL https://raw.githubusercontent.com/valet-sh/install/master/install.sh)\n</code></pre> <p>Reopen your terminal and install all services and tools via</p> <pre><code>valet.sh install\n</code></pre>"},{"location":"getting-started/installation/#next-see-first-steps","title":"Next see First-Steps","text":""},{"location":"getting-started/support-matrix/","title":"Support Matrix","text":"<p>valet.sh is currently working on the following operating systems:</p> Operating-System valet.sh 2.x Ubuntu 18.04 Ubuntu 20.04 Ubuntu 22.04 Ubuntu 24.04 MacOS 10.15 MacOS 11 (Intel) MacOS 12 (Intel) MacOS 12 (Apple Silicon) MacOS 13 (Intel) MacOS 13 (Apple Silicon) MacOS 14 (Intel) MacOS 14 (Apple Silicon) MacOS 15 (Intel) MacOS 15 (Apple Silicon) macOS 26 (Intel) macOS 26 (Apple Silicon)"},{"location":"getting-started/whats-new/","title":"What's new in valet.sh 2.x","text":"<p>Here is a short list of all the new main features of valet.sh 2.x (compared to 1.x).</p> <ul> <li>macOS Support</li> <li>parallel installation of MySQL 5.7 and 8.0</li> <li>New \"service\" command:<ul> <li>Manage the state of each service (enable/disable)</li> <li>Manage a default service for PHP, Elasticsearch and MySQL (more information)</li> </ul> </li> </ul> <p>See also Changelog.</p>"},{"location":"how-to-articles/","title":"How-to articles","text":"<ul> <li>How to use the development branch of valet.sh</li> <li>Install and use Profiler XHProf or Blackfire</li> <li>Install IonCube Loader</li> <li>Migrate from valet-plus to valet.sh</li> <li>Migration-Cheatsheet from valet-plus to valet.sh</li> <li>Project configuration via .valet-sh.yml</li> <li>Setup a magento project</li> <li>Update only valet.sh</li> </ul>"},{"location":"how-to-articles/how-to-use-the-development-branch-of-valet-sh/","title":"How to use the development branch of valet.sh","text":"<p>Each new version is first tested in the \"next\" branch. Follow the steps to switch to the next branch:</p> <pre><code>bash &lt;(curl -fsSL https://raw.githubusercontent.com/valet-sh/install/master/install.sh)\n\n/usr/local/valet-sh/installer/valet-sh-installer release-channel next\nvalet.sh self-upgrade\nvalet.sh install\n</code></pre> <p>Updates can be executed with the standard upgrade command <pre><code>valet.sh self-upgrade\n</code></pre></p> <p>use the following commands to switch back to the stable release branch <pre><code>/usr/local/valet-sh/installer/valet-sh-installer release-channel 2.x\nvalet.sh self-upgrade\nvalet.sh install\n</code></pre></p>"},{"location":"how-to-articles/install-and-use-profiler-xhprof-or-blackfire/","title":"Install and use Profiler XHProf or Blackfire","text":""},{"location":"how-to-articles/install-and-use-profiler-xhprof-or-blackfire/#xhprof","title":"XHprof","text":""},{"location":"how-to-articles/install-and-use-profiler-xhprof-or-blackfire/#installation-module","title":"Installation module","text":"<p>example installation for PHP7.4</p> <pre><code>valet.sh service default php74\npecl7.4 install xhprof\nvalet.sh service restart php74\n</code></pre> <p>example installation for PHP8.1</p> <pre><code>valet.sh service default php81\npecl8.1 install xhprof\nvalet.sh service restart php81\n</code></pre>"},{"location":"how-to-articles/install-and-use-profiler-xhprof-or-blackfire/#webinterface","title":"Webinterface","text":"<pre><code>mkdir -p ~/Workspace/git/\ncd ~/Workspace/git/\ngit clone https://github.com/longxinH/xhprof\ncd xhprof/xhprof_html\nvalet.sh service enable php74\nvalet.sh link xhprof php74\nbrew install graphviz\n</code></pre> <p>Save this patch as <code>xhprof.patch</code> inside <code>~/Workspace/git/xhprof</code> and execute <code>git apply xhprof.patch</code>:</p> <pre><code>diff --git a/xhprof_html/index.php b/xhprof_html/index.php\nindex f21d32f..71c89e7 100644\n--- a/xhprof_html/index.php\n+++ b/xhprof_html/index.php\n@@ -80,7 +80,7 @@ $vbbar = ' class=\"vbbar\"';\n $vrbar = ' class=\"vrbar\"';\n $vgbar = ' class=\"vgbar\"';\n\n-$xhprof_runs_impl = new XHProfRuns_Default();\n+$xhprof_runs_impl = new XHProfRuns_Default(__DIR__.'/files');\n\n displayXHProfReport($xhprof_runs_impl, $params, $source, $run, $wts,\n                     $symbol, $sort, $run1, $run2);\ndiff --git a/xhprof_lib/utils/xhprof_lib.php b/xhprof_lib/utils/xhprof_lib.php\nindex 507e669..4067391 100644\n--- a/xhprof_lib/utils/xhprof_lib.php\n+++ b/xhprof_lib/utils/xhprof_lib.php\n@@ -908,7 +908,7 @@ function xhprof_param_init($params) {\n     }\n\n     if ($k === 'run') {\n-      $p = implode(',', array_filter(explode(',', $p), 'ctype_xdigit'));\n+      #$p = implode(',', array_filter(explode(',', $p), 'ctype_xdigit'));\n     }\n\n     if ($k == 'symbol') {\n</code></pre>"},{"location":"how-to-articles/install-and-use-profiler-xhprof-or-blackfire/#usage","title":"Usage","text":"<pre><code>&lt;?php\n\n// check if we need to profile this page using xhprof\n$useXhprof = isset($_GET['XHPROF_ENABLE']);\n\n// enable xhprof\nif ($useXhprof) {\n    xhprof_enable();\n}\n\n... your code to profile ...\n\n// disable xhprof and save profile file\nif ($useXhprof) {\n    file_put_contents(\n        sys_get_temp_dir() . DIRECTORY_SEPARATOR .\n        sprintf(\n            'profiling_%s_%s.%s.xhprof',\n            date('Y-m-d-His'),\n            trim(preg_replace('/[^a-z0-9]/i', '_', explode('?', $_SERVER['REQUEST_URI'])[0]), '_'),\n            trim(preg_replace('/[^a-z0-9]/i', '_', $_SERVER['HTTP_HOST']), '_')\n        ),\n        serialize(xhprof_disable())\n    );\n}\n</code></pre> <ul> <li>Ensure <code>/usr/local/etc/vsh-php81/conf.d/ext-blackfire.ini</code> does not exist or is commented out and restart   PHP <code>valet.sh service restart all</code></li> <li>Execute profiled code with <code>XHPROF_ENABLE</code> parameter (Example: https://myproject.test/en_us/imprint?XHPROF_ENABLE=1)</li> <li>Open https://xhprof.test/ to show the results (the result dumps are stored under <code>/var/tmp/*.xhprof</code>   / <code>~/Workspace/git/xhprof/xhprof_html/files/*.xhprof</code>)</li> </ul>"},{"location":"how-to-articles/install-and-use-profiler-xhprof-or-blackfire/#blackfire","title":"Blackfire","text":""},{"location":"how-to-articles/install-and-use-profiler-xhprof-or-blackfire/#install-agent-via-homebrew","title":"Install Agent via Homebrew","text":"<pre><code>brew tap blackfireio/homebrew-blackfire\nbrew install blackfire\n</code></pre>"},{"location":"how-to-articles/install-and-use-profiler-xhprof-or-blackfire/#install-php-probe","title":"Install PHP Probe","text":"<p>See this url .</p> <p>Example for PHP7.4</p> <pre><code>curl https://packages.blackfire.io/binaries/blackfire-php/1.88.1/blackfire-php-darwin_amd64-php-74.so -o blackfire.so\nsudo cp blackfire.so /usr/local/Cellar/vsh-php74/7.4.*/lib/vsh-php74/20*/\nrm blackfire.so\nmkdir -p /usr/local/var/run/\nvalet.sh service restart php74\n</code></pre> <p>Example for PHP8.1</p> <pre><code>curl https://packages.blackfire.io/binaries/blackfire-php/1.85.0/blackfire-php-darwin_amd64-php-81.so -o blackfire.so\nsudo cp blackfire.so /usr/local/Cellar/vsh-php81/8.1.*/lib/vsh-php81/20*/\nrm blackfire.so\nmkdir -p /usr/local/var/run/\nvalet.sh service restart php81\n</code></pre>"},{"location":"how-to-articles/install-and-use-profiler-xhprof-or-blackfire/#add-config-file","title":"Add config file","text":"<p>Create file <code>/usr/local/etc/vsh-php74/conf.d/ext-blackfire.ini</code> with content</p> <pre><code>[blackfire]\nextension = blackfire.so\nblackfire.server_id = xxx\nblackfire.server_token = xxx\n\n; Log verbosity level:\n;   4: debug\n;   3: info\n;   2: warning;\n;   1: error\nblackfire.log_level = 2\n\n; Log file (STDERR by default)\n;blackfire.log_file = /tmp/blackfire.log\n\n; Sets the socket where the agent is listening.\n; Possible value can be a unix socket or a TCP address.\n; Defaults values are:\n;   - Linux: unix:///var/run/blackfire/agent.sock\n;   - macOS amd64: unix:///usr/local/var/run/blackfire-agent.sock\n;   - macOS arm64 (M1): unix:///opt/homebrew/var/run/blackfire-agent.sock\n;   - Windows: tcp://127.0.0.1:8307\nblackfire.agent_socket = unix:///opt/homebrew/var/run/blackfire-agent.sock\n\n; Enables Blackfire Monitoring\n; Enabled by default since version 1.61.0\n;blackfire.apm_enabled = 1\n</code></pre>"},{"location":"how-to-articles/install-and-use-profiler-xhprof-or-blackfire/#configure","title":"Configure","text":"<ul> <li>Set up your account</li> <li>Configure the server ID with <code>blackfire agent:config --server-id=xxx --server-token=xxx</code></li> <li> <p>and restart the agent with <code>brew services restart blackfire</code></p> </li> <li> <p>Install   the   Chrome extension</p> </li> </ul>"},{"location":"how-to-articles/install-and-use-profiler-xhprof-or-blackfire/#usage_1","title":"Usage","text":"<p>Ensure <code>/usr/local/etc/vsh-php81/php.ini</code> (replace <code>php81</code> with correct PHP version) does not contain <code>extension=\"xhprof.so\"</code> or it is commented out and restart PHP <code>valet.sh service restart all</code>.</p> <p>Click the profile button (of the Chrome extension) on a webpage using the PHP version Blackfire has been enabled for.</p>"},{"location":"how-to-articles/install-ioncube-loader/","title":"Install IonCube Loader","text":""},{"location":"how-to-articles/install-ioncube-loader/#macos","title":"MacOS","text":"<p>Example for PHP7.4 <pre><code>cd /tmp\ncurl https://downloads.ioncube.com/loader_downloads/ioncube_loaders_mac_x86-64.zip -o ioncube.zip\nunzip ioncube.zip\nrm ioncube.zip\nsudo cp ioncube/ioncube_loader_mac_7.4.* /usr/local/Cellar/vsh-php74/7.4.*/lib/vsh-php74/20*/\nrm -rf ioncube\nsudo echo \"zend_extension=ioncube_loader_mac_7.4.so\" &gt; /usr/local/etc/vsh-php74/conf.d/ext-ioncube.ini\nvalet.sh service restart php74\n</code></pre></p>"},{"location":"how-to-articles/migrate-from-valet-plus-to-valet-sh/","title":"Migrate from valet-plus to valet.sh","text":"<p>Please read all instructions carefully and run command by command. If you run into any errors, please report them before continuing to ensure the issue gets fixed for the next person to upgrade.</p> <p>Info</p> <p>Please be sure to be on a supported operating system version before continuing. See Support-Matrix.</p> <p>Warning</p> <p>Caution: Your MySQL databases will not be migrated. Please create backups for the databases you need and delete all databases before proceeding.</p> <p>Ensure Command Line Tools are installed <pre><code>xcode-select --install # if this fails, download and install \"Command Line Tools for Xcode 12\" (or whatever version your OS needs) via https://developer.apple.com/download/more/\n</code></pre></p> <p>Uninstall valet-plus <pre><code>valet stop\ncomposer global remove techdivision/valet-plus\nrm -rf ~/.valet\nrm -f /usr/local/var/log/php-fpm.log\nsed -i -e 's/^conf-file=/#conf-file=/g' /usr/local/etc/dnsmasq.conf\nunsetopt NOMATCH; sudo rm /Library/LaunchDaemons/homebrew.mxcl.php* 2&amp;&gt;1; setopt NOMATCH\n</code></pre></p> <p>Uninstall valet.sh 1.x <pre><code>sudo launchctl unload -w /Library/LaunchDaemons/sh.valet.*\nsudo rm -rf /Library/LaunchDaemons/sh.valet.*\nsudo rm -rf /usr/local/valet-sh\n</code></pre></p> <p>Cleanup and uninstall brew packages <pre><code>sudo rm -rf /usr/local/Cellar/dnsmasq\nsudo rm -rf /usr/local/Cellar/nginx\nsudo rm -rf /usr/local/Cellar/valet-php*\n\nbrew uninstall --force sleepwatcher httpd-bc mailhog nginx dnsmasq rabbitmq redis mysql@5.7 elasticsearch@2.4 elasticsearch@5.6 valet-php@5.6 valet-php@7.0 valet-php@7.1 valet-php@7.2 valet-php@7.3 valet-php@7.4\nbrew untap henkrehorst/homebrew-php\n</code></pre></p> <p>Install valet.sh <pre><code>cp ~/.zshrc ~/.zshrc.bak\ncp -r ~/.oh-my-zsh ~/.oh-my-zsh.bak\n\n# this error can be ignored: unshallow on a complete repository does not make sense\ngit -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core fetch --unshallow\ngit -C /usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask fetch --unshallow\n\nbrew update &amp;&amp; brew upgrade\nbrew doctor\nbrew cleanup\n\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/valet-sh/install/master/install.sh)\"\nvalet.sh self-upgrade\nvalet.sh install\n</code></pre></p> <p>After installation check if (https://mailhog.test)[https://mailhog.test] is available in your browser. Maybe you need to restart your system.</p> <p>Info</p> <p>Your rabbitMQ configs will remain.</p> <p>As your old mySQL installation is removed within the upgrade to valet.sh 2, there may still be a large data folder on your Mac. You can remove it safely by running the following command: rm -rf /usr/local/var/mysql</p> <p>If you want to use your Touch ID for sudo, see this stack exchange post. You can then confirm all sudo processes (and therefore also all valet.sh commands) with your Touch ID.</p> <p>To set up your first project see the following how to: Setup magento project</p> <p>Please also refer to the Migration-Cheatsheet from valet-plus to valet.sh</p>"},{"location":"how-to-articles/migration-cheatsheet-from-valet-plus-to-valet-sh/","title":"Migration-Cheatsheet from valet-plus to valet.sh","text":"<p>Information</p> <p>Most of the commands from valet-plus can be used in the same way with \"valet.sh\" instead of \"valet\" (see also Commands). Please refer to the following cheatsheet to determine if you need to change your workflow.</p>"},{"location":"how-to-articles/migration-cheatsheet-from-valet-plus-to-valet-sh/#commands","title":"Commands","text":""},{"location":"how-to-articles/migration-cheatsheet-from-valet-plus-to-valet-sh/#valet-use-74","title":"valet use 7.4","text":"<p>New Command: php7.4 (see Comment)</p> <p>Comment:</p> <p>With valet+ you needed to switch PHP versions on CLI every time you needed to do a change within a project with a different PHP version.  With valet.sh now all PHP versions are installed at the same time. </p> <ul> <li>CLI: To use PHP 7.1 on cli, simply enter \"php7.1 {your command}\". For composer install on 7.3 for example you can use \"php7.3 $(which composer1) install\". <ul> <li>You can also use the .valet-sh.yml to specify the PHP version for the current folder. </li> </ul> </li> <li>WEB: The PHP version that is used within the web (browser) is specified in the corresponding link (see valet.sh link).</li> </ul> <p>If you need to change your default PHP CLI version, you can use \"valet.sh service default php72\" to change your default PHP to 7.2 without the need to specify a version. This usage is NOT RECOMMENDED and should be avoided. Please switch to the explicit PHP version specification where possible, especially in project instantiation scripts.</p>"},{"location":"how-to-articles/migration-cheatsheet-from-valet-plus-to-valet-sh/#valet-xdebug-on","title":"valet xdebug on","text":"<p>New Command: valet.sh xdebug on 7.4</p> <p>Comment:</p> <p>You now need to specify the PHP version.</p>"},{"location":"how-to-articles/migration-cheatsheet-from-valet-plus-to-valet-sh/#valet-link-myproject-secure","title":"valet link myproject --secure","text":"<p>New Command: valet.sh link myproject php74</p> <p>Comment:</p> <p>You now need to specify the PHP version.</p>"},{"location":"how-to-articles/migration-cheatsheet-from-valet-plus-to-valet-sh/#valet-db-create-myproject","title":"valet db create myproject","text":"<p>New Command: <code>valet.sh db create myproject</code> (with default mySQL) or <code>mysql8.0 -e 'CREATE DATABASE myproject'</code> (for a specific mySQL version)</p> <p>Comment: You now may need to specify the mySQL version (mysql5.7 / mysql8.0).</p>"},{"location":"how-to-articles/migration-cheatsheet-from-valet-plus-to-valet-sh/#valet-db-drop-myproject","title":"valet db drop myproject","text":"<p>New Command: <code>valet.sh db drop myproject</code> (with default mySQL) or <code>mysql8.0 -e 'DROP SCHEMA IF EXISTS myproject'</code> (for a specific mySQL version)</p> <p>Comment: You now may need to specify the mySQL version (mysql5.7 / mysql8.0).</p>"},{"location":"how-to-articles/migration-cheatsheet-from-valet-plus-to-valet-sh/#valet-db-dump-myproject-myproject","title":"valet db dump myproject myproject","text":"<p>New Command: <code>valet.sh db export myproject</code> (with default mySQL) or <code>mysqldump8.0 --default-character-set=utf8 --single-transaction --no-tablespaces -uroot -p -h127.0.0.1 --port=3308 myproject | gzip &gt; myproject.sql.gz</code> (for a specific mySQL version)</p> <p>Comment:</p> <p>Use port 3307 for mySQL 5.7, use port 3308 for mySQL 8. You now may need to specify the mySQL version (mysqldump5.7 / mysqldump8.0).</p>"},{"location":"how-to-articles/migration-cheatsheet-from-valet-plus-to-valet-sh/#valet-db-import-myprojectsql-myproject","title":"valet db import myproject.sql myproject","text":"<p>New Command: <code>valet.sh db import myproject</code> (with default mySQL) or <code>mysql8.0 -e 'CREATE DATABASE myproject'</code> (for a specific mySQL version)</p> <p>Comment: You now may need to specify the mySQL version (mysql5.7 / mysql8.0).</p>"},{"location":"how-to-articles/migration-cheatsheet-from-valet-plus-to-valet-sh/#valetsh-install-elasticsearch-7","title":"valet.sh install elasticsearch 7","text":"<p>New Command: <code>valet.sh service enable elasticsearch7</code></p> <p>Comment: The most Elasticsearch versions are pre-installed. Simply enable them to use them.</p>"},{"location":"how-to-articles/migration-cheatsheet-from-valet-plus-to-valet-sh/#valet-restart-nginx","title":"valet restart nginx","text":"<p>New Command: <code>valet.sh service restart nginx</code></p>"},{"location":"how-to-articles/migration-cheatsheet-from-valet-plus-to-valet-sh/#mysql","title":"mysql","text":"<p>New Command: <code>mysql8.0</code> or <code>mysql5.7</code> or <code>mariadb10.4</code></p>"},{"location":"how-to-articles/migration-cheatsheet-from-valet-plus-to-valet-sh/#project-configuration-changes","title":"Project configuration changes:","text":"Old Setting New setting Description localhost 127.0.0.1 Please change all usages of localhost to 127.0.0.1 localhost / 3306 127.0.0.1 / 3307 If you use the port 3306 for your project's db configuration, please change it to 3307 for mySQL 5.7 or 3308 for mySQL 8. localhost / 9200 127.0.0.1 / 9207 If you use the port 3306 for your project's db configuration, please change it to 3307 for mySQL 5.7 or 3308 for mySQL 8."},{"location":"how-to-articles/project-configuration-via-valet-sh-yml/","title":"Project configuration via .valet-sh.yml","text":""},{"location":"how-to-articles/project-configuration-via-valet-sh-yml/#create-a-stub-file","title":"Create a stub file","text":"<p>To create a stub file execute the following command</p> <pre><code>valet.sh init\n</code></pre> <p>This creates the file\u00a0<code>.valet-sh.yml</code>\u00a0in the current folder, thus make sure to have your project root as current working directory when executing this command.</p> <p>After having created the stub file, make sure to configure the settings as required for your project.</p> <p>The documentation for the command above can be found here.</p>"},{"location":"how-to-articles/project-configuration-via-valet-sh-yml/#configuration-settings","title":"Configuration settings","text":"<p>WIP: this list may not be completely finished.</p> Configuration Path Example Default Description hub hub &gt; host xyz.yourserver.com dummy.example.com SFTP Server to fetch instance backup files from hub &gt; port 22 22 SFTP Port hub &gt; path /data /data Absolute path in which instance backup files are provided hub &gt; user root SFTP User services services &gt; composer services &gt; composer &gt; version 2 1 Composer version to be used inside the project (1 or 2). services &gt; node services &gt; node &gt; version 11 14 Node.js version that shall be used to set up the project services &gt; php services &gt; php &gt; version 7.4 The PHP version for the project. This value will ensure:The given version is used for web access to your project (e. g. project.test)The given version is used on the CLI within the project folder services &gt; mysql services &gt; mysql &gt; version 8.0 The MySQL version for the project. The given version will be started and the dump will be imported into this instance. services &gt; mysql &gt; database projectx Database name to import the dump. If the database already exists, it will be dropped before. services &gt; mariadb services &gt; mariadb &gt; version 10.4 The MariaDB version for the project. The given version will be started and the dump will be imported into this instance. services &gt; mariadb &gt; database projectx Database name to import the dump. If the database already exists, it will be dropped before. services &gt; elasticsearch services &gt; elasticsearch &gt; version 6 7 The Elasticsearch version for the project. services &gt; elasticsearch &gt; plugins <code>analysis-phonetic</code> and `analysis-icu Subset of plugins to enable, specified in YAML block sequence notation. services &gt; rabbitmq services &gt; rabbitmq &gt; vhost project-x Name of the RabbitMQ virtual host that will be used in the project. If the vhost does not exist, it is created instance instance &gt; key projectX The 2nd level domain used to access the project locally.Example:Given that the value \"myproject\" is configured, the project will be accessible via the domain \"myproject.test\" instance &gt; type magento2 Defines the project type, which will be used when linking the project.Valid values are:\"magento1\"\"magento2\"\"neos\"\"\" instance &gt; path src Defines the path, relative to the project root, to the document root of the project. instance &gt; multidomain de: \"default\"  en: \"en\" Defines the mapping of domain prefixes (aka 3rd level domains) to store codes, specified as YAML Mapping of Scalars.Example:Given thatthe project is accessible locally using the domain \"myproject.test\"there is a store view with the store code \"foo_bar\"the store view shall be accessible through the domain \"myfoo.myproject.test\"Then the following mapping entry should be addedmyfoo: foo_bar instance &gt; sync instance &gt; sync &gt; identifier prod test Defines the unique name of the remote instance from which data (database &amp; files) shall be copied when restoring. instance &gt; sync &gt; db false true Not in use yet instance &gt; sync &gt; fs `pub/media Defines the paths, relative to\u00a0instance &gt; path\u00a0 that shall be copied from the remote instance when restoring. instance &gt; sync &gt; post_restore_actions &gt; indexer instance &gt; sync &gt; post_restore_actions &gt; indexer &gt; reindexAll true false Defines whether all indexes shall be rebuilt after restoring. instance &gt; sync &gt; post_restore_actions &gt; indexer &gt; reindex <code>elasticsuite_categories_fulltext</code> <code>elasticsuite_thesaurus</code> Defines the indexes that shall be rebuilt after restoring. instance &gt; sync &gt; post_restore_actions &gt; commands <code>bin/test</code> Defines commands that are executed after restoring (will be executed in instance:path folder [src]). instance &gt; sync &gt; post_restore_actions &gt;\u00a0sql_queries `UPDATE test SET a = 1 Defines SQL queries that are executed after restoring. instance &gt; crypt_key Defines the encryption key that will be written to\u00a0app/etc/env.php\u00a0when initializing the instance. instance &gt; config &gt; system {} Defines scoped configuration entries that will be written to\u00a0app/etc/env.php\u00a0when initializing the instance.See below for supported scopes. instance &gt; config &gt; system &gt; default catalog:  search:    engine: elasticsearch7    elasticsearch7_server_hostname: 127.0.0.1    elasticsearch7_server_port: 9207 Defines a collection of arbitrary configurations that will be written to the default scope of the\u00a0app/etc/env.php.Supports a nesting depth of 3. instance &gt; config &gt; system &gt; stores see above Defines a collection of arbitrary configurations that will be written to the stores scope of the\u00a0app/etc/env.php.Supports a nesting depth of 3. instance &gt; config &gt; system &gt; websites see above Defines a collection of arbitrary configurations that will be written to the websites scope of the\u00a0app/etc/env.php.Supports a nesting depth of 3."},{"location":"how-to-articles/project-configuration-via-valet-sh-yml/#set-up-your-project","title":"Set up your project","text":"<p>To set up your project (aka initialize your instance) using an existing <code>.valet-sh.yml</code>, execute the following command</p> <pre><code>valet.sh init-instance\n</code></pre> <p>The documentation for this command can be found here.</p>"},{"location":"how-to-articles/setup-a-magento-project/","title":"Setup a magento project","text":"<p>Go to workspace directory: <pre><code>cd ~/Workspace/&lt;PROJECT_NAME&gt;\n</code></pre></p> <p>Link project via: <pre><code>valet.sh link &lt;PROJECT_NAME&gt; php73\n</code></pre></p> <p>Import your database via: <pre><code>valet.sh db import tmp/latest.sql.gz &lt;PROJECT_NAME&gt;\n</code></pre></p> <p>Do the project relevant settings for e.g. magento:</p> <p>Edit env.php: * change database host localhost to 127.0.0.1 * change database port 3306 to 3307 for mysql5.7 or 3308 for mysql8.0 usage</p> <p>Update Magento config, cache and index <pre><code>bin/magento app:config:import -n\nbin/magento c:f\nbin/magento index:reindex\n</code></pre></p> <p>To install magento, you can use these commands: <pre><code>COMPOSER_MEMORY_LIMIT=-1 composer create-project --repository-url=https://repo.magento.com/ magento/project-enterprise-edition=2.3.5-p2 demo23\n\nbin/magento setup:install --admin-firstname Demo --admin-lastname Demo --admin-email magento@techdivision.com --admin-user admin --admin-password admin --base-url https://demo23.test/ --db-host 127.0.0.1 --db-name demo23 --db-user root --db-password root --use-rewrites 1 --backend-frontname admin --currency EUR --timezone Europe/Berlin\n</code></pre></p>"},{"location":"how-to-articles/upgrade-valet-sh/","title":"Upgrade valet sh","text":"<p>Every now and then we publish updates of valet.sh that you should adopt as fast as possible. In the past we often encountered the issue that people upgraded valet.sh  but did not seem to be able to use the newest features. Most of the time this was related to the two-step-upgrade required to actually roll out the upgrades on their machines not having been followed through.</p> <p>To properly roll out the latest upgrade of valet.sh on your machine, always perform the two following steps in the mentioned order:</p>"},{"location":"how-to-articles/upgrade-valet-sh/#update-only-valetsh","title":"Update only valet.sh","text":"<pre><code>valet.sh self-upgrade\nvalet.sh install\n</code></pre> <p>The first step upgrades the code of your valet.sh copy (comparable to apt update on Debian based Linux distributions), the second makes sure that the ecosystem defined by valet.sh is applied to your machine (comparable to apt upgrade on Debian based Linux distributions).</p> <p>In case you are missing a feature of valet.sh on your machine although it should be there, run valet.sh install and check whether the feature becomes available.</p>"},{"location":"how-to-articles/upgrade-valet-sh/#update-system-and-valetsh","title":"Update System and valet.sh","text":""},{"location":"how-to-articles/upgrade-valet-sh/#ubuntu","title":"Ubuntu","text":"<pre><code>sudo apt-get update\nsudo apt-get upgrade\n\nvalet.sh self-upgrade\nvalet.sh install\n</code></pre>"},{"location":"how-to-articles/upgrade-valet-sh/#macos-intel","title":"MacOs (Intel)","text":"<pre><code>brew update\nbrew upgrade\n\nvalet.sh self-upgrade\nvalet.sh install\n</code></pre>"},{"location":"how-to-articles/upgrade-valet-sh/#macos-m1","title":"MacOs (M1)","text":"<pre><code>brew_x86 update\nbrew_x86 upgrade\nbrew update\nbrew upgrade\n\nvalet.sh self-upgrade\nvalet.sh install\n</code></pre>"},{"location":"services/","title":"Services","text":"<p>valet.sh will install the following services on your machine. You can not skip the installation of a specific service, but you are able to stop/disable them afterwards.</p> <ul> <li>Composer</li> <li>Elasticsearch</li> <li>Mailhog</li> <li>MariaDB</li> <li>MySQL</li> <li>Nginx</li> <li>NodeJS</li> <li>OpenSearch</li> <li>PHP</li> <li>Rabbitmq</li> <li>Redis</li> <li>Valkey</li> </ul>"},{"location":"services/composer/","title":"Composer","text":""},{"location":"services/composer/#versions","title":"Versions","text":"Version Path Plugins Default version composer1.x /usr/local/bin/composer1 hirak/prestissimo YES composer2.x /usr/local/bin/composer2 NO"},{"location":"services/composer/#change-the-default-version","title":"Change the default version","text":"<p>to change the default version of composer when using the \"composer\" command (without the version suffix at the end) on cli, you need to change it via valet.sh</p> <p>change the default composer version to 2 <pre><code>valet.sh service default composer2\n</code></pre></p> <p>composer 2 is now your default version</p> <p></p>"},{"location":"services/elasticsearch/","title":"ElasticSearch","text":""},{"location":"services/elasticsearch/#version","title":"Version","text":"<p>Version 1,2,5,6,7 and 8 of Elasticsearch and Version 1,2 and 3 of OpenSearch will be installed on your host. You can use each version at the same time, because different TCP ports are used.</p> Elasticsearch version TCP port running by default 1.x 9201 NO 2.x 9202 NO 5.x 9205 NO 6.x 9206 YES 7.x 9207 NO 8.x 9208 NO OpenSearch version TCP port running by default 1.x 9221 NO 2.x 9222 NO 3.x 9223 NO <p>Info</p> <p>The default Elasticsearch can also be accessed via TCP port 9200!</p>"},{"location":"services/elasticsearch/#manage-elasticsearch-services","title":"manage Elasticsearch services","text":"<p>Only Elasticsearch 6 is running by default to reduce overall load and memory consumption. You can start/stop and enable/disable each elasticsearch version via valet.sh.</p> <pre><code># stop and disable elasticsearch 5\nvalet.sh service disable elasticsearch5\n\n# start and enable elasticsearch 5\nvalet.sh service enable elasticsearch5\n</code></pre> <p>Warning</p> <p>You are able to start/stop a service via systemd (Ubuntu) or launchctl (macOS), but you might face some issues when running the \"valet.sh install\" command.</p>"},{"location":"services/elasticsearch/#update-elasticsearch-ubuntu-only","title":"Update Elasticsearch (Ubuntu only!)","text":"<p>We do not have any update mechanism for minor or patch level releases at this point of time. To enforce an update simply stop the daemon and remove the package directory, <code>valet.sh install</code> will reinstall deleted elasticsearch version. </p> <p>Warning</p> <p>all data in the affected version will be lost!</p> <p>Example commands for reinstalling elasticsearch 5 <pre><code>valet.sh service disable elasticsearch5\nrm -r /usr/local/valet-sh/packages/elasticsearch5\nvalet.sh install\n</code></pre></p>"},{"location":"services/elasticsearch/#plugins","title":"Plugins","text":"<p>The plugins analysis-phonetic and analysis-icu are installed by default for every Elasticsearch version. More plugins can be installed by the default plugin install executable.</p> <p>elasticsearch pugin installation on Ubuntu <pre><code># elasticsearch 1\n/usr/local/valet-sh/packages/elasticsearch1/bin/plugin install &lt;pluginname&gt;\n\n# elasticsearch 2\n/usr/local/valet-sh/packages/elasticsearch2/bin/plugin install &lt;pluginname&gt;\n\n# elasticsearch 5\n/usr/local/valet-sh/packages/elasticsearch5/bin/elasticsearch-plugin install &lt;pluginname&gt;\n\n# elasticsearch 6\n/usr/local/valet-sh/packages/elasticsearch6/bin/elasticsearch-plugin install &lt;pluginname&gt;\n\n# elasticsearch 7\n/usr/local/valet-sh/packages/elasticsearch7/bin/elasticsearch-plugin install &lt;pluginname&gt;\n\n# elasticsearch 8\n/usr/local/valet-sh/packages/elasticsearch8/bin/elasticsearch-plugin install &lt;pluginname&gt;\n\n# opensearch 1\n/usr/local/valet-sh/packages/opensearch1/bin/opensearch-plugin install &lt;pluginname&gt;\n\n# opensearch 2\n/usr/local/valet-sh/packages/opensearch2/bin/opensearch-plugin install &lt;pluginname&gt;\n</code></pre></p> <p>elasticsearch pugin installation on MacOS <pre><code># elasticsearch 1\n/usr/local/opt/vsh-elasticsearch1/libexec/bin/plugin install &lt;pluginname&gt;\n\n# elasticsearch 2\n/usr/local/opt/vsh-elasticsearch2/libexec/bin/plugin install &lt;pluginname&gt;\n\n# elasticsearch 5\n/usr/local/opt/vsh-elasticsearch5/libexec/bin/elasticsearch-plugin install &lt;pluginname&gt;\n\n# elasticsearch 6\n/usr/local/opt/vsh-elasticsearch6/libexec/bin/elasticsearch-plugin install &lt;pluginname&gt;\n\n# elasticsearch 7\n/usr/local/opt/vsh-elasticsearch7/libexec/bin/elasticsearch-plugin install &lt;pluginname&gt;\n\n# elasticsearch 8\n/usr/local/opt/vsh-elasticsearch8/libexec/bin/elasticsearch-plugin install &lt;pluginname&gt;\n\n# opensearch 1\n/usr/local/opt/vsh-opensearch1/libexec/bin/opensearch-plugin install &lt;pluginname&gt;\n\n# opensearch 2\n/usr/local/opt/vsh-opensearch2/libexec/bin/opensearch-plugin install &lt;pluginname&gt;\n</code></pre></p>"},{"location":"services/mailhog/","title":"MailHog","text":"<p>Info</p> <p>In valet.sh 2.11.0, mailhog was replaced by mailpit \u2192 Please see the Docs for Mailpit</p>"},{"location":"services/mailpit/","title":"Mailpit","text":"<p>Quote</p> <p>\"An email and SMTP testing tool with API for developers\" - please visit https://github.com/axllent/mailpit for more information.</p>"},{"location":"services/mailpit/#usage","title":"Usage","text":"<p>You can access the UI via https://mailpit.test</p> <p>PHP is configured to use mailpit automatically (e.g. the mail() function), but you can use SMTP with host localhost and port 8025 as well.</p> <p></p>"},{"location":"services/mariadb/","title":"MariaDB","text":"<p>Info</p> <p>Since valet.sh 2.6.0 MariaDB is part of the MySQL Service handling \u2192 Please see the Docs for Mysql</p>"},{"location":"services/mysql/","title":"MySQL","text":""},{"location":"services/mysql/#version","title":"Version","text":"<p>Version 5.7, 8.0 and 8.4 of MySQL will be installed on your host. You can use each version at the same time, as different TCP ports are used.</p> Type Version TCP port running by default MySQL 5.7 3307 YES MySQL 8.0 3308 NO MySQL 8.4 3309 NO Mariadb 10.4 3317 NO Mariadb 10.6 3319 NO Mariadb 10.11 3324 NO Mariadb 11.4 3329 NO <p>Warning</p> <p>The default MySQL can also be accessed via TCP port 3306!"},{"location":"services/mysql/#manage-mysql-services","title":"Manage MySQL services","text":"<p>Only MySQL 5.7 is running by default to reduce overall load and memory consumption. You can start/stop and enable/disable each mysql version via valet.sh.</p> <pre><code># stop and disable MySQL 5.7\nvalet.sh service disable mysql57\n\n# start and enable MySQL 5.7\nvalet.sh service enable mysql57\n\n# stop and disable MySQL 8.0\nvalet.sh service disable mysql80\n\n# start and enable MySQL 8.0\nvalet.sh service enable mysql80\n\n# stop and disable MariaDB 10.4\nvalet.sh service disable mariadb104\n\n# start and enable MariaDB 10.4\nvalet.sh service enable mariadb104\n\n# stop and disable MariaDB 10.6\nvalet.sh service disable mariadb106\n\n# start and enable MariaDB 10.6\nvalet.sh service enable mariadb106\n</code></pre> <p>Warning</p> <p>You are able to start/stop a service via systemd (Ubuntu) or launchctl (macOS), but you might face some issues when running the \"valet.sh install\" command. </p>"},{"location":"services/mysql/#access-mysql","title":"Access MySQL","text":"<p>MySQL via valet.sh only uses TCP for the connection. Unix sockets are deactivated! Instead of using \"localhost\" as host definition in your application, you have to use \"127.0.0.1\" and in most cases, when there is no separate port definition,  append the port to the host string. e.g \"127.0.0.1:3306\"</p>"},{"location":"services/mysql/#default-credentials","title":"Default Credentials:","text":"Username Password root root <p>Warning</p> <p>Note that if you change the standard MySQL version, all configured apps with the standard port 3306 will be redirected to the new standard MySQL version. You have to create a new database, run database migrations, or export and import the db from the previous MySQL default service. You can avoid this behavior by directly using the port of the target MySQL version.</p>"},{"location":"services/mysql/#access-mariadb","title":"Access MariaDB","text":"<p>Info</p> <p>Since valet.sh 2.6.0 MariaDB is part of the MySQL service handling. Mariadb can now be set as the default \"mysql\" version.</p>"},{"location":"services/mysql/#default-credentials_1","title":"Default Credentials:","text":"Username Password root root <p>Info</p> <p>Use <code>mariadb10.4</code>,<code>mariadump10.4</code> or <code>mariadb10.6</code>,<code>mariadump10.6</code> to work with MariaDB on CLI!</p>"},{"location":"services/nginx/","title":"Nginx","text":""},{"location":"services/nginx/#configuration","title":"Configuration","text":"<p>All site configurations are stored in /etc/nginx/conf.d/ (Linux) or /usr/local/etc/nginx/conf.d/ (macOS) directory. Only files with .conf extension will be respected.</p> <p>Info</p> <p>You can add or modify those configuration files by your self, but commands like <code>valet.sh unlink</code> or <code>valet.sh link</code> can delete or override your changes!</p>"},{"location":"services/nginx/#ssl","title":"SSL","text":"<p>during the <code>valet.sh install</code> process a development CA will be created. To add the CA to your browsers trust chain, execute the following command.</p> <pre><code>valet.sh update-dev-ca\n</code></pre> <p>Info</p> <p>after installing a new browser it may be necessary to re-run this command!</p> <p>For each nginx site configuration created by <code>valet.sh link</code> a certificate signed by that CA will be created. This certificate covers the domain plus subdomains. A site created by <code>valet.sh link example</code> covers <code>example.test</code> and <code>*.example.test</code>.</p>"},{"location":"services/nodejs/","title":"NodeJS","text":""},{"location":"services/nodejs/#version-manager","title":"Version Manager","text":"<p>valet.sh supports the version managers nvm and volta. It is not possible to use both at the same time. nvm is installed by default. </p> <p>How to change the version manager: <pre><code># switch to volta\nvalet.sh config set default_nvm volta\n\n# switch back to nvm\nvalet.sh config set default_nvm nvm\n</code></pre></p> <p>Warning</p> <p><code>valet.sh install</code> must be run each time to apply the change! </p>"},{"location":"services/nodejs/#nvm-usage","title":"nvm usage","text":""},{"location":"services/nodejs/#switch-node-versions","title":"Switch node versions","text":"<p>To change the Node.js version in your current terminal, just execute the following command.</p> <p>Change nodejs to the latest 11.* release <pre><code>#&lt;version&gt; can be a major version like 6, 8, 10, 11,15 or a specific release like \"8.16.2\"\nnvm install &lt;version&gt;\n\nExample:\nnvm install 11\n</code></pre></p>"},{"location":"services/nodejs/#set-a-default-version","title":"Set a default Version","text":"<p>nvm only changes the Node.js version for your current terminal window. To set a new default version for your system execute the following command with your desired version</p> <p>Set a specific node version as system default <pre><code>#&lt;version&gt; can be a major version like 6, 8, 10, 11,15 or a specific release like \"8.16.2\"\nnvm alias default &lt;version&gt;\n\nExample:\nnvm alias default 11\n</code></pre></p>"},{"location":"services/nodejs/#package-manger","title":"Package-Manger","text":"<p>nodejs comes with the <code>node-package-manager</code> or <code>npm</code>. npm and all installed global npm packages are bound to the installed nodejs version release. For instance when you install the npm package \"yarn\" globally (\"npm install -g yarn\") its only available as long as you use the same nodejs version. After switching from e.g. node 11 to node 15 you have to install <code>yarn</code> again (by the same command). </p>"},{"location":"services/nodejs/#volta-usage","title":"volta usage","text":""},{"location":"services/nodejs/#switch-node-version","title":"Switch node version","text":"<p>The version is installed and becomes the default version in all terminals. By <code>pinning</code> the versions, an individual version can be used for each project.</p> <pre><code>#&lt;version&gt; can be a major version like 6, 8, 10, 11,15 or a specific release like \"8.16.2\"\nvolta install node@&lt;version&gt;\n\nExample:\nvolta install node@14\n</code></pre>"},{"location":"services/nodejs/#pin-node-version","title":"Pin node version","text":"<p>Volta saves the exact version of the Node engine in your package.json so you can commit your selection to git. From that point on, every time you run Node inside your project directory, Volta automatically switches to that same version of Node you chose. Similarly, all your collaborators can do the same by installing Volta on their development machine.</p> <pre><code>#&lt;version&gt; can be a major version like 6, 8, 10, 11,15 or a specific release like \"8.16.2\"\nvolta pin node@&lt;version&gt;\n\nExample:\nvolta pin node@18\n</code></pre>"},{"location":"services/opensearch/","title":"OpenSearch","text":"<p>OpenSearch is managed as a variant of elasticsearch please see the documentation here.</p>"},{"location":"services/php/","title":"PHP","text":""},{"location":"services/php/#versions","title":"Versions","text":"<p>at the moment PHP5.6, 7.0, 7.1, 7.2, 7.3, 7.4, 8.0, 8.1, 8.2, 8.3 and 8.4 are installed by valet.sh</p> Version Linux socket MacOS socket Servicename xdebug 2.* xdebug 3.* FPM service running by default php-5.6 /var/run/php/php5.6-fpm.sock /tmp/vsh-php56.sock php56 php-7.0 /var/run/php/php7.0-fpm.sock /tmp/vsh-php70.sock php70 php-7.1 /var/run/php/php7.1-fpm.sock /tmp/vsh-php71.sock php71 php-7.2 /var/run/php/php7.2-fpm.sock /tmp/vsh-php72.sock php72 php-7.3 /var/run/php/php7.3-fpm.sock /tmp/vsh-php73.sock php73 php-7.4 /var/run/php/php7.4-fpm.sock /tmp/vsh-php74.sock php74 php-8.0 /var/run/php/php8.0-fpm.sock /tmp/vsh-php80.sock php80 php-8.1 /var/run/php/php8.1-fpm.sock /tmp/vsh-php81.sock php81 php-8.2 /var/run/php/php8.2-fpm.sock /tmp/vsh-php82.sock php82 php-8.3 /var/run/php/php8.3-fpm.sock /tmp/vsh-php83.sock php83 php-8.4 /var/run/php/php8.4-fpm.sock /tmp/vsh-php84.sock php84"},{"location":"services/php/#manage-services","title":"manage services","text":"<p>to manage the state (enable/disable/start/stop) of each php version, use the service command (Read more about the service command here).</p> <pre><code># stop and disable php7.2\nvalet.sh service disable php72\n\n# start and enable php5.6\nvalet.sh service enable php56\n</code></pre> <p>Info</p> <p>disabling a php service stops only the FPM service for the selected version! You can still use all installed php versions on cli. (e.g \"php5.6\")</p>"},{"location":"services/php/#manage-xdebug","title":"Manage xdebug","text":""},{"location":"services/php/#versions_1","title":"Versions","text":"<p>xdebug2 and xdebug3 are provided by valet.sh, but only php7.3 and php7.4 supports both xdebug major versions</p> <p>change the default xdebug version <pre><code>valet.sh service default xdebug3\n</code></pre></p>"},{"location":"services/php/#example-change-xdebug-version-from-3-to-2","title":"Example: change xdebug version from 3 to 2","text":"<p>Let's assume you are running xdebug3 on php7.4 and want to switch to xdebug2</p> <ul> <li>ensure xdebug is disabled for your desired php version <pre><code>valet.sh xdebug off 7.4\n</code></pre></li> <li>switch xdebug version <pre><code>valet.sh service default xdebug2\n</code></pre></li> <li>enable xdebug for php7.4 <pre><code>valet.sh xdebug on 7.4\n</code></pre></li> <li>xdebug2 is now enabled for php7.4!</li> </ul> <p></p> <p>Info</p> <p>Setting a \"default\" xdebug version has no effect on php versions that supports only one xdebug version. For example php8.0 will always load xdebug3 even when the default version is set to xdebug2!</p>"},{"location":"services/rabbitmq/","title":"RabbitMQ","text":"<p>rabbitmq is installed but disabled by default. To use it, you need to enable it first. <pre><code>valet.sh service enable rabbitmq\n</code></pre></p> <p>The rabbitmq_management plugin will be installed by default. You can reach the rabbitmq web interface at the following URL <pre><code>https://rabbitmq.test\n</code></pre> Use <code>guest</code> as the username and <code>guest</code> as the password to log in.</p>"},{"location":"services/redis/","title":"Redis","text":"<p>Redis is installed and enabled by default. There are no plans to support multiple redis versions.</p> Version Port Default version depends on operating system 6379 YES <p>You can also use the cli tools to connect to Redis</p> <pre><code>redis-cli\n</code></pre>"},{"location":"services/valkey/","title":"Valkey","text":"<p>Valkey is installed but disabled by default.</p> Version Port Default version 8 6389 YES <p>You can also use the cli tools to connect to Valkey</p> <pre><code>valkey8-cli\n</code></pre>"}]}